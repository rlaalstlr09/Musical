<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.human.dao.IReviewDao">

<select id="selectAll" parameterType="map" resultType="com.human.dto.ReviewDto">
select * from review where musical_id=#{musical_id} order by case 
	when #{vo.sort,jdbcType=VARCHAR}='rating' then rating
	when #{vo.sort,jdbcType=VARCHAR}='date' then review_id
	else review_id
	end desc
OFFSET (#{vo.page}-1) * #{vo.perPageNum} ROWS
FETCH NEXT #{vo.perPageNum} ROWS ONLY
</select>

<select id="selectMyReview" parameterType="map" resultType="com.human.dto.ReviewDto">
select m.musical_title,r.* from review r join musical m 
on r.musical_id=m.musical_id where customer_id=#{customer_id} order by review_id desc
OFFSET (#{vo.page}-1) * #{vo.perPageNum} ROWS
FETCH NEXT #{vo.perPageNum} ROWS ONLY
</select>

<select id="avgRating" resultType="Double">
select round(avg(rating),1) from review where musical_id=#{musical_id, jdbcType=INTEGER}
</select>

<insert id="insert" >
insert into review(review_id,customer_id,musical_id,content,rating,review_date)
 values(review_seq.nextval,#{customer_id},#{musical_id},#{content},#{rating},sysdate)
</insert>


<select id="totalCount" parameterType="map" resultType="Integer">
SELECT COUNT(*) FROM review WHERE musical_id = #{musical_id}
  
</select>

<select id="myTotalCount" parameterType="String" resultType="Integer">
SELECT COUNT(*) FROM review WHERE customer_id = #{customer_id} 
</select>


<delete id="delete">
delete review where review_id=#{review_id}
</delete>

<delete id="all_delete">
delete review where customer_id=#{customer_id}
</delete>

<update id="update">
update review set review_id=#{review_id},customer_id=#{customer_id},
musical_id=#{musical_id},content=#{content},rating=#{rating},
review_date=#{review_date} where review_id=#{review_id}
</update>

<!-- admin 리뷰 관리 -->


<select id="review_listAll" resultType="com.human.dto.ReviewDto" >
SELECT r.*,musical_title
FROM review r, musical m
WHERE r.musical_id=m.musical_id
</select>
<sql id='search'>
    <if test="keyword!=null">
            and (content LIKE '%' || #{keyword} || '%')                        
    </if>
</sql>
	
<sql id='join_musical_id'>
    <if test="searchType!=null">
    <if test="searchType!='전체'">
    <if test="searchType!=''">
            and m.musical_title = #{searchType}
    </if>  </if>    </if>
</sql>

<sql id='customer_id'>
    <if test="nGroupKind!=null">
    <if test="nGroupKind!='전체'">
    <if test="nGroupKind!=''">
            and customer_id = #{nGroupKind}
    </if>    </if>    </if>
</sql>
	
	
<select id="review_listSearch" resultType="com.human.dto.ReviewDto" >	
	<![CDATA[SELECT r.*,musical_title
FROM review r, musical m
WHERE r.musical_id=m.musical_id]]>
<include refid="join_musical_id"/>
<include refid="customer_id"/>
<include refid="search"/>
<![CDATA[ORDER BY review_id DESC
OFFSET (#{page} - 1) * #{perPageNum} ROWS
FETCH NEXT #{perPageNum} ROWS ONLY]]>
</select>

<sql id='musical_id'>
    <if test="searchType!=null">
    <if test="searchType!='전체'">
    <if test="searchType!=''">
            and m.musical_title = #{searchType}
    </if>  </if>    </if>
</sql>

<select id="review_listSearchCount" resultType="int">
<![CDATA[ select count(DISTINCT r.review_id) from review r, musical m where 1=1 ]]>
		<include refid="search" />
<include refid="join_musical_id"/>
<include refid="customer_id"/>
<![CDATA[ and review_id > 0 ]]>
</select>

<select id="review_read" resultType="com.human.dto.ReviewDto" >	
SELECT *
FROM review
WHERE review_id=#{review_id}
</select>


</mapper>



